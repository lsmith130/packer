// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package hyperone

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
	"time"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName           string                 `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name,optional"`
	PackerBuilderType         string                 `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type,optional"`
	PackerDebug               bool                   `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug,optional"`
	PackerForce               bool                   `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force,optional"`
	PackerOnError             string                 `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error,optional"`
	PackerUserVars            map[string]string      `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables,optional"`
	PackerSensitiveVars       []string               `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables,optional"`
	Type                      string                 `mapstructure:"communicator" cty:"communicator" hcl:"communicator,optional"`
	PauseBeforeConnect        time.Duration          `mapstructure:"pause_before_connecting" cty:"pause_before_connecting" hcl:"pause_before_connecting,optional"`
	SSHHost                   string                 `mapstructure:"ssh_host" cty:"ssh_host" hcl:"ssh_host,optional"`
	SSHPort                   int                    `mapstructure:"ssh_port" cty:"ssh_port" hcl:"ssh_port,optional"`
	SSHUsername               string                 `mapstructure:"ssh_username" cty:"ssh_username" hcl:"ssh_username,optional"`
	SSHPassword               string                 `mapstructure:"ssh_password" cty:"ssh_password" hcl:"ssh_password,optional"`
	SSHKeyPairName            string                 `mapstructure:"ssh_keypair_name" cty:"ssh_keypair_name" hcl:"ssh_keypair_name,optional"`
	SSHTemporaryKeyPairName   string                 `mapstructure:"temporary_key_pair_name" cty:"temporary_key_pair_name" hcl:"temporary_key_pair_name,optional"`
	SSHClearAuthorizedKeys    bool                   `mapstructure:"ssh_clear_authorized_keys" cty:"ssh_clear_authorized_keys" hcl:"ssh_clear_authorized_keys,optional"`
	SSHPrivateKeyFile         string                 `mapstructure:"ssh_private_key_file" cty:"ssh_private_key_file" hcl:"ssh_private_key_file,optional"`
	SSHPty                    bool                   `mapstructure:"ssh_pty" cty:"ssh_pty" hcl:"ssh_pty,optional"`
	SSHTimeout                time.Duration          `mapstructure:"ssh_timeout" cty:"ssh_timeout" hcl:"ssh_timeout,optional"`
	SSHAgentAuth              bool                   `mapstructure:"ssh_agent_auth" cty:"ssh_agent_auth" hcl:"ssh_agent_auth,optional"`
	SSHDisableAgentForwarding bool                   `mapstructure:"ssh_disable_agent_forwarding" cty:"ssh_disable_agent_forwarding" hcl:"ssh_disable_agent_forwarding,optional"`
	SSHHandshakeAttempts      int                    `mapstructure:"ssh_handshake_attempts" cty:"ssh_handshake_attempts" hcl:"ssh_handshake_attempts,optional"`
	SSHBastionHost            string                 `mapstructure:"ssh_bastion_host" cty:"ssh_bastion_host" hcl:"ssh_bastion_host,optional"`
	SSHBastionPort            int                    `mapstructure:"ssh_bastion_port" cty:"ssh_bastion_port" hcl:"ssh_bastion_port,optional"`
	SSHBastionAgentAuth       bool                   `mapstructure:"ssh_bastion_agent_auth" cty:"ssh_bastion_agent_auth" hcl:"ssh_bastion_agent_auth,optional"`
	SSHBastionUsername        string                 `mapstructure:"ssh_bastion_username" cty:"ssh_bastion_username" hcl:"ssh_bastion_username,optional"`
	SSHBastionPassword        string                 `mapstructure:"ssh_bastion_password" cty:"ssh_bastion_password" hcl:"ssh_bastion_password,optional"`
	SSHBastionPrivateKeyFile  string                 `mapstructure:"ssh_bastion_private_key_file" cty:"ssh_bastion_private_key_file" hcl:"ssh_bastion_private_key_file,optional"`
	SSHFileTransferMethod     string                 `mapstructure:"ssh_file_transfer_method" cty:"ssh_file_transfer_method" hcl:"ssh_file_transfer_method,optional"`
	SSHProxyHost              string                 `mapstructure:"ssh_proxy_host" cty:"ssh_proxy_host" hcl:"ssh_proxy_host,optional"`
	SSHProxyPort              int                    `mapstructure:"ssh_proxy_port" cty:"ssh_proxy_port" hcl:"ssh_proxy_port,optional"`
	SSHProxyUsername          string                 `mapstructure:"ssh_proxy_username" cty:"ssh_proxy_username" hcl:"ssh_proxy_username,optional"`
	SSHProxyPassword          string                 `mapstructure:"ssh_proxy_password" cty:"ssh_proxy_password" hcl:"ssh_proxy_password,optional"`
	SSHKeepAliveInterval      time.Duration          `mapstructure:"ssh_keep_alive_interval" cty:"ssh_keep_alive_interval" hcl:"ssh_keep_alive_interval,optional"`
	SSHReadWriteTimeout       time.Duration          `mapstructure:"ssh_read_write_timeout" cty:"ssh_read_write_timeout" hcl:"ssh_read_write_timeout,optional"`
	SSHRemoteTunnels          []string               `mapstructure:"ssh_remote_tunnels" cty:"ssh_remote_tunnels" hcl:"ssh_remote_tunnels,optional"`
	SSHLocalTunnels           []string               `mapstructure:"ssh_local_tunnels" cty:"ssh_local_tunnels" hcl:"ssh_local_tunnels,optional"`
	SSHPublicKey              []byte                 `cty:"ssh_public_key" hcl:"ssh_public_key,optional"`
	SSHPrivateKey             []byte                 `cty:"ssh_private_key" hcl:"ssh_private_key,optional"`
	WinRMUser                 string                 `mapstructure:"winrm_username" cty:"winrm_username" hcl:"winrm_username,optional"`
	WinRMPassword             string                 `mapstructure:"winrm_password" cty:"winrm_password" hcl:"winrm_password,optional"`
	WinRMHost                 string                 `mapstructure:"winrm_host" cty:"winrm_host" hcl:"winrm_host,optional"`
	WinRMPort                 int                    `mapstructure:"winrm_port" cty:"winrm_port" hcl:"winrm_port,optional"`
	WinRMTimeout              time.Duration          `mapstructure:"winrm_timeout" cty:"winrm_timeout" hcl:"winrm_timeout,optional"`
	WinRMUseSSL               bool                   `mapstructure:"winrm_use_ssl" cty:"winrm_use_ssl" hcl:"winrm_use_ssl,optional"`
	WinRMInsecure             bool                   `mapstructure:"winrm_insecure" cty:"winrm_insecure" hcl:"winrm_insecure,optional"`
	WinRMUseNTLM              bool                   `mapstructure:"winrm_use_ntlm" cty:"winrm_use_ntlm" hcl:"winrm_use_ntlm,optional"`
	APIURL                    string                 `mapstructure:"api_url" required:"false" cty:"api_url" hcl:"api_url,optional"`
	Token                     string                 `mapstructure:"token" required:"true" cty:"token" hcl:"token,optional"`
	Project                   string                 `mapstructure:"project" required:"true" cty:"project" hcl:"project,optional"`
	TokenLogin                string                 `mapstructure:"token_login" required:"false" cty:"token_login" hcl:"token_login,optional"`
	StateTimeout              time.Duration          `mapstructure:"state_timeout" required:"false" cty:"state_timeout" hcl:"state_timeout,optional"`
	SourceImage               string                 `mapstructure:"source_image" required:"true" cty:"source_image" hcl:"source_image,optional"`
	ImageName                 string                 `mapstructure:"image_name" required:"false" cty:"image_name" hcl:"image_name,optional"`
	ImageDescription          string                 `mapstructure:"image_description" required:"false" cty:"image_description" hcl:"image_description,optional"`
	ImageTags                 map[string]interface{} `mapstructure:"image_tags" required:"false" cty:"image_tags" hcl:"image_tags,optional"`
	ImageService              string                 `mapstructure:"image_service" required:"false" cty:"image_service" hcl:"image_service,optional"`
	VmType                    string                 `mapstructure:"vm_type" required:"true" cty:"vm_type" hcl:"vm_type,optional"`
	VmName                    string                 `mapstructure:"vm_name" required:"false" cty:"vm_name" hcl:"vm_name,optional"`
	VmTags                    map[string]interface{} `mapstructure:"vm_tags" required:"false" cty:"vm_tags" hcl:"vm_tags,optional"`
	DiskName                  string                 `mapstructure:"disk_name" required:"false" cty:"disk_name" hcl:"disk_name,optional"`
	DiskType                  string                 `mapstructure:"disk_type" required:"false" cty:"disk_type" hcl:"disk_type,optional"`
	DiskSize                  float32                `mapstructure:"disk_size" required:"true" cty:"disk_size" hcl:"disk_size,optional"`
	Network                   string                 `mapstructure:"network" required:"false" cty:"network" hcl:"network,optional"`
	PrivateIP                 string                 `mapstructure:"private_ip" required:"false" cty:"private_ip" hcl:"private_ip,optional"`
	PublicIP                  string                 `mapstructure:"public_ip" required:"false" cty:"public_ip" hcl:"public_ip,optional"`
	PublicNetAdpService       string                 `mapstructure:"public_netadp_service" required:"false" cty:"public_netadp_service" hcl:"public_netadp_service,optional"`
	ChrootDisk                bool                   `mapstructure:"chroot_disk" cty:"chroot_disk" hcl:"chroot_disk,optional"`
	ChrootDiskSize            float32                `mapstructure:"chroot_disk_size" cty:"chroot_disk_size" hcl:"chroot_disk_size,optional"`
	ChrootDiskType            string                 `mapstructure:"chroot_disk_type" cty:"chroot_disk_type" hcl:"chroot_disk_type,optional"`
	ChrootMountPath           string                 `mapstructure:"chroot_mount_path" cty:"chroot_mount_path" hcl:"chroot_mount_path,optional"`
	ChrootMounts              [][]string             `mapstructure:"chroot_mounts" cty:"chroot_mounts" hcl:"chroot_mounts,optional"`
	ChrootCopyFiles           []string               `mapstructure:"chroot_copy_files" cty:"chroot_copy_files" hcl:"chroot_copy_files,optional"`
	ChrootCommandWrapper      string                 `mapstructure:"chroot_command_wrapper" cty:"chroot_command_wrapper" hcl:"chroot_command_wrapper,optional"`
	MountOptions              []string               `mapstructure:"mount_options" cty:"mount_options" hcl:"mount_options,optional"`
	MountPartition            string                 `mapstructure:"mount_partition" cty:"mount_partition" hcl:"mount_partition,optional"`
	PreMountCommands          []string               `mapstructure:"pre_mount_commands" cty:"pre_mount_commands" hcl:"pre_mount_commands,optional"`
	PostMountCommands         []string               `mapstructure:"post_mount_commands" cty:"post_mount_commands" hcl:"post_mount_commands,optional"`
	SSHKeys                   []string               `mapstructure:"ssh_keys" required:"false" cty:"ssh_keys" hcl:"ssh_keys,optional"`
	UserData                  string                 `mapstructure:"user_data" required:"false" cty:"user_data" hcl:"user_data,optional"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{} { return new(FlatConfig) }

// HCL2Spec returns the hcldec.Spec of a Config.
// This spec is used by HCL to read the fields of Config.
func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"PackerBuildName":           &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"PackerBuilderType":         &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"PackerDebug":               &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"PackerForce":               &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"PackerOnError":             &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"PackerUserVars":            &hcldec.BlockAttrsSpec{TypeName: "packer_user_variables", ElementType: cty.String, Required: false},
		"PackerSensitiveVars":       &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"Type":                      &hcldec.AttrSpec{Name: "communicator", Type: cty.String, Required: false},
		"PauseBeforeConnect":        &hcldec.AttrSpec{Name: "pause_before_connecting", Type: cty.String, Required: false},
		"SSHHost":                   &hcldec.AttrSpec{Name: "ssh_host", Type: cty.String, Required: false},
		"SSHPort":                   &hcldec.AttrSpec{Name: "ssh_port", Type: cty.Number, Required: false},
		"SSHUsername":               &hcldec.AttrSpec{Name: "ssh_username", Type: cty.String, Required: false},
		"SSHPassword":               &hcldec.AttrSpec{Name: "ssh_password", Type: cty.String, Required: false},
		"SSHKeyPairName":            &hcldec.AttrSpec{Name: "ssh_keypair_name", Type: cty.String, Required: false},
		"SSHTemporaryKeyPairName":   &hcldec.AttrSpec{Name: "temporary_key_pair_name", Type: cty.String, Required: false},
		"SSHClearAuthorizedKeys":    &hcldec.AttrSpec{Name: "ssh_clear_authorized_keys", Type: cty.Bool, Required: false},
		"SSHPrivateKeyFile":         &hcldec.AttrSpec{Name: "ssh_private_key_file", Type: cty.String, Required: false},
		"SSHPty":                    &hcldec.AttrSpec{Name: "ssh_pty", Type: cty.Bool, Required: false},
		"SSHTimeout":                &hcldec.AttrSpec{Name: "ssh_timeout", Type: cty.String, Required: false},
		"SSHAgentAuth":              &hcldec.AttrSpec{Name: "ssh_agent_auth", Type: cty.Bool, Required: false},
		"SSHDisableAgentForwarding": &hcldec.AttrSpec{Name: "ssh_disable_agent_forwarding", Type: cty.Bool, Required: false},
		"SSHHandshakeAttempts":      &hcldec.AttrSpec{Name: "ssh_handshake_attempts", Type: cty.Number, Required: false},
		"SSHBastionHost":            &hcldec.AttrSpec{Name: "ssh_bastion_host", Type: cty.String, Required: false},
		"SSHBastionPort":            &hcldec.AttrSpec{Name: "ssh_bastion_port", Type: cty.Number, Required: false},
		"SSHBastionAgentAuth":       &hcldec.AttrSpec{Name: "ssh_bastion_agent_auth", Type: cty.Bool, Required: false},
		"SSHBastionUsername":        &hcldec.AttrSpec{Name: "ssh_bastion_username", Type: cty.String, Required: false},
		"SSHBastionPassword":        &hcldec.AttrSpec{Name: "ssh_bastion_password", Type: cty.String, Required: false},
		"SSHBastionPrivateKeyFile":  &hcldec.AttrSpec{Name: "ssh_bastion_private_key_file", Type: cty.String, Required: false},
		"SSHFileTransferMethod":     &hcldec.AttrSpec{Name: "ssh_file_transfer_method", Type: cty.String, Required: false},
		"SSHProxyHost":              &hcldec.AttrSpec{Name: "ssh_proxy_host", Type: cty.String, Required: false},
		"SSHProxyPort":              &hcldec.AttrSpec{Name: "ssh_proxy_port", Type: cty.Number, Required: false},
		"SSHProxyUsername":          &hcldec.AttrSpec{Name: "ssh_proxy_username", Type: cty.String, Required: false},
		"SSHProxyPassword":          &hcldec.AttrSpec{Name: "ssh_proxy_password", Type: cty.String, Required: false},
		"SSHKeepAliveInterval":      &hcldec.AttrSpec{Name: "ssh_keep_alive_interval", Type: cty.String, Required: false},
		"SSHReadWriteTimeout":       &hcldec.AttrSpec{Name: "ssh_read_write_timeout", Type: cty.String, Required: false},
		"SSHRemoteTunnels":          &hcldec.AttrSpec{Name: "ssh_remote_tunnels", Type: cty.List(cty.String), Required: false},
		"SSHLocalTunnels":           &hcldec.AttrSpec{Name: "ssh_local_tunnels", Type: cty.List(cty.String), Required: false},
		"SSHPublicKey":              &hcldec.AttrSpec{Name: "ssh_public_key", Type: cty.List(cty.Number), Required: false},
		"SSHPrivateKey":             &hcldec.AttrSpec{Name: "ssh_private_key", Type: cty.List(cty.Number), Required: false},
		"WinRMUser":                 &hcldec.AttrSpec{Name: "winrm_username", Type: cty.String, Required: false},
		"WinRMPassword":             &hcldec.AttrSpec{Name: "winrm_password", Type: cty.String, Required: false},
		"WinRMHost":                 &hcldec.AttrSpec{Name: "winrm_host", Type: cty.String, Required: false},
		"WinRMPort":                 &hcldec.AttrSpec{Name: "winrm_port", Type: cty.Number, Required: false},
		"WinRMTimeout":              &hcldec.AttrSpec{Name: "winrm_timeout", Type: cty.String, Required: false},
		"WinRMUseSSL":               &hcldec.AttrSpec{Name: "winrm_use_ssl", Type: cty.Bool, Required: false},
		"WinRMInsecure":             &hcldec.AttrSpec{Name: "winrm_insecure", Type: cty.Bool, Required: false},
		"WinRMUseNTLM":              &hcldec.AttrSpec{Name: "winrm_use_ntlm", Type: cty.Bool, Required: false},
		"APIURL":                    &hcldec.AttrSpec{Name: "api_url", Type: cty.String, Required: false},
		"Token":                     &hcldec.AttrSpec{Name: "token", Type: cty.String, Required: false},
		"Project":                   &hcldec.AttrSpec{Name: "project", Type: cty.String, Required: false},
		"TokenLogin":                &hcldec.AttrSpec{Name: "token_login", Type: cty.String, Required: false},
		"StateTimeout":              &hcldec.AttrSpec{Name: "state_timeout", Type: cty.String, Required: false},
		"SourceImage":               &hcldec.AttrSpec{Name: "source_image", Type: cty.String, Required: false},
		"ImageName":                 &hcldec.AttrSpec{Name: "image_name", Type: cty.String, Required: false},
		"ImageDescription":          &hcldec.AttrSpec{Name: "image_description", Type: cty.String, Required: false},
		"ImageTags":                 &hcldec.BlockAttrsSpec{TypeName: "image_tags", ElementType: cty.String, Required: false},
		"ImageService":              &hcldec.AttrSpec{Name: "image_service", Type: cty.String, Required: false},
		"VmType":                    &hcldec.AttrSpec{Name: "vm_type", Type: cty.String, Required: false},
		"VmName":                    &hcldec.AttrSpec{Name: "vm_name", Type: cty.String, Required: false},
		"VmTags":                    &hcldec.BlockAttrsSpec{TypeName: "vm_tags", ElementType: cty.String, Required: false},
		"DiskName":                  &hcldec.AttrSpec{Name: "disk_name", Type: cty.String, Required: false},
		"DiskType":                  &hcldec.AttrSpec{Name: "disk_type", Type: cty.String, Required: false},
		"DiskSize":                  &hcldec.AttrSpec{Name: "disk_size", Type: cty.Number, Required: false},
		"Network":                   &hcldec.AttrSpec{Name: "network", Type: cty.String, Required: false},
		"PrivateIP":                 &hcldec.AttrSpec{Name: "private_ip", Type: cty.String, Required: false},
		"PublicIP":                  &hcldec.AttrSpec{Name: "public_ip", Type: cty.String, Required: false},
		"PublicNetAdpService":       &hcldec.AttrSpec{Name: "public_netadp_service", Type: cty.String, Required: false},
		"ChrootDisk":                &hcldec.AttrSpec{Name: "chroot_disk", Type: cty.Bool, Required: false},
		"ChrootDiskSize":            &hcldec.AttrSpec{Name: "chroot_disk_size", Type: cty.Number, Required: false},
		"ChrootDiskType":            &hcldec.AttrSpec{Name: "chroot_disk_type", Type: cty.String, Required: false},
		"ChrootMountPath":           &hcldec.AttrSpec{Name: "chroot_mount_path", Type: cty.String, Required: false},
		"ChrootMounts":              &hcldec.AttrSpec{Name: "chroot_mounts", Type: cty.Bool, Required: false}, /* TODO(azr): could not find slice type ([][]string) */
		"ChrootCopyFiles":           &hcldec.AttrSpec{Name: "chroot_copy_files", Type: cty.List(cty.String), Required: false},
		"ChrootCommandWrapper":      &hcldec.AttrSpec{Name: "chroot_command_wrapper", Type: cty.String, Required: false},
		"MountOptions":              &hcldec.AttrSpec{Name: "mount_options", Type: cty.List(cty.String), Required: false},
		"MountPartition":            &hcldec.AttrSpec{Name: "mount_partition", Type: cty.String, Required: false},
		"PreMountCommands":          &hcldec.AttrSpec{Name: "pre_mount_commands", Type: cty.List(cty.String), Required: false},
		"PostMountCommands":         &hcldec.AttrSpec{Name: "post_mount_commands", Type: cty.List(cty.String), Required: false},
		"SSHKeys":                   &hcldec.AttrSpec{Name: "ssh_keys", Type: cty.List(cty.String), Required: false},
		"UserData":                  &hcldec.AttrSpec{Name: "user_data", Type: cty.String, Required: false},
	}
	return s
}
