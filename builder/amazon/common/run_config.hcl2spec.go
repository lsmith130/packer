// Code generated by "mapstructure-to-hcl2 -type AmiFilterOptions"; DO NOT EDIT.
package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatAmiFilterOptions is an auto-generated flat version of AmiFilterOptions.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatAmiFilterOptions struct {
	Filters    map[*string]*string `cty:"filters" hcl:"filters,optional"`
	Owners     []*string           `cty:"owners" hcl:"owners,optional"`
	MostRecent bool                `mapstructure:"most_recent" cty:"most_recent" hcl:"most_recent,optional"`
}

// FlatMapstructure returns a new FlatAmiFilterOptions.
// FlatAmiFilterOptions is an auto-generated flat version of AmiFilterOptions.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*AmiFilterOptions) FlatMapstructure() interface{} { return new(FlatAmiFilterOptions) }

// HCL2Spec returns the hcldec.Spec of a AmiFilterOptions.
// This spec is used by HCL to read the fields of AmiFilterOptions.
func (*AmiFilterOptions) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Filters":    &hcldec.BlockAttrsSpec{TypeName: "filters", ElementType: cty.String, Required: false},
		"Owners":     nil, // slice ([]*string),
		"MostRecent": &hcldec.AttrSpec{Name: "most_recent", Type: cty.Bool, Required: false},
	}
	return s
}
