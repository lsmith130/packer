// Code generated by "mapstructure-to-hcl2 -type BlockDevice"; DO NOT EDIT.
package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/hashicorp/packer/helper/config"
	"github.com/zclconf/go-cty/cty"
)

// FlatBlockDevice is an auto-generated flat version of BlockDevice.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatBlockDevice struct {
	DeleteOnTermination bool           `mapstructure:"delete_on_termination" required:"false" cty:"delete_on_termination" hcl:"delete_on_termination,optional"`
	DeviceName          string         `mapstructure:"device_name" required:"false" cty:"device_name" hcl:"device_name,optional"`
	Encrypted           config.Trilean `mapstructure:"encrypted" required:"false" cty:"encrypted" hcl:"encrypted,optional"`
	IOPS                int64          `mapstructure:"iops" required:"false" cty:"iops" hcl:"iops,optional"`
	NoDevice            bool           `mapstructure:"no_device" required:"false" cty:"no_device" hcl:"no_device,optional"`
	SnapshotId          string         `mapstructure:"snapshot_id" required:"false" cty:"snapshot_id" hcl:"snapshot_id,optional"`
	VirtualName         string         `mapstructure:"virtual_name" required:"false" cty:"virtual_name" hcl:"virtual_name,optional"`
	VolumeType          string         `mapstructure:"volume_type" required:"false" cty:"volume_type" hcl:"volume_type,optional"`
	VolumeSize          int64          `mapstructure:"volume_size" required:"false" cty:"volume_size" hcl:"volume_size,optional"`
	KmsKeyId            string         `mapstructure:"kms_key_id" required:"false" cty:"kms_key_id" hcl:"kms_key_id,optional"`
}

// FlatMapstructure returns a new FlatBlockDevice.
// FlatBlockDevice is an auto-generated flat version of BlockDevice.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*BlockDevice) FlatMapstructure() interface{} { return new(FlatBlockDevice) }

// HCL2Spec returns the hcldec.Spec of a BlockDevice.
// This spec is used by HCL to read the fields of BlockDevice.
func (*BlockDevice) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"DeleteOnTermination": &hcldec.AttrSpec{Name: "delete_on_termination", Type: cty.Bool, Required: false},
		"DeviceName":          &hcldec.AttrSpec{Name: "device_name", Type: cty.String, Required: false},
		"Encrypted":           &hcldec.AttrSpec{Name: "config.Trilean", Type: cty.Number, Required: false},
		"IOPS":                &hcldec.AttrSpec{Name: "iops", Type: cty.Number, Required: false},
		"NoDevice":            &hcldec.AttrSpec{Name: "no_device", Type: cty.Bool, Required: false},
		"SnapshotId":          &hcldec.AttrSpec{Name: "snapshot_id", Type: cty.String, Required: false},
		"VirtualName":         &hcldec.AttrSpec{Name: "virtual_name", Type: cty.String, Required: false},
		"VolumeType":          &hcldec.AttrSpec{Name: "volume_type", Type: cty.String, Required: false},
		"VolumeSize":          &hcldec.AttrSpec{Name: "volume_size", Type: cty.Number, Required: false},
		"KmsKeyId":            &hcldec.AttrSpec{Name: "kms_key_id", Type: cty.String, Required: false},
	}
	return s
}
