// Code generated by "mapstructure-to-hcl2 -type ImageDestination"; DO NOT EDIT.
package uhost

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatImageDestination is an auto-generated flat version of ImageDestination.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatImageDestination struct {
	ProjectId   string `mapstructure:"project_id" cty:"project_id" hcl:"project_id,optional"`
	Region      string `mapstructure:"region" cty:"region" hcl:"region,optional"`
	Name        string `mapstructure:"name" cty:"name" hcl:"name,optional"`
	Description string `mapstructure:"description" cty:"description" hcl:"description,optional"`
}

// FlatMapstructure returns a new FlatImageDestination.
// FlatImageDestination is an auto-generated flat version of ImageDestination.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*ImageDestination) FlatMapstructure() interface{} { return new(FlatImageDestination) }

// HCL2Spec returns the hcldec.Spec of a ImageDestination.
// This spec is used by HCL to read the fields of ImageDestination.
func (*ImageDestination) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"ProjectId":   &hcldec.AttrSpec{Name: "project_id", Type: cty.String, Required: false},
		"Region":      &hcldec.AttrSpec{Name: "region", Type: cty.String, Required: false},
		"Name":        &hcldec.AttrSpec{Name: "name", Type: cty.String, Required: false},
		"Description": &hcldec.AttrSpec{Name: "description", Type: cty.String, Required: false},
	}
	return s
}
