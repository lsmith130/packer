// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package chroot

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/hashicorp/packer/builder/osc/common"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName         string                  `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name,optional"`
	PackerBuilderType       string                  `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type,optional"`
	PackerDebug             bool                    `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug,optional"`
	PackerForce             bool                    `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force,optional"`
	PackerOnError           string                  `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error,optional"`
	PackerUserVars          map[string]string       `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables,optional"`
	PackerSensitiveVars     []string                `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables,optional"`
	OMIMappings             []common.BlockDevice    `mapstructure:"omi_block_device_mappings" cty:"omi_block_device_mappings" hcl:"omi_block_device_mappings,optional"`
	OMIName                 string                  `mapstructure:"omi_name" cty:"omi_name" hcl:"omi_name,optional"`
	OMIDescription          string                  `mapstructure:"omi_description" cty:"omi_description" hcl:"omi_description,optional"`
	OMIVirtType             string                  `mapstructure:"omi_virtualization_type" cty:"omi_virtualization_type" hcl:"omi_virtualization_type,optional"`
	OMIAccountIDs           []string                `mapstructure:"omi_account_ids" cty:"omi_account_ids" hcl:"omi_account_ids,optional"`
	OMIGroups               []string                `mapstructure:"omi_groups" cty:"omi_groups" hcl:"omi_groups,optional"`
	OMIProductCodes         []string                `mapstructure:"omi_product_codes" cty:"omi_product_codes" hcl:"omi_product_codes,optional"`
	OMIRegions              []string                `mapstructure:"omi_regions" cty:"omi_regions" hcl:"omi_regions,optional"`
	OMISkipRegionValidation bool                    `mapstructure:"skip_region_validation" cty:"skip_region_validation" hcl:"skip_region_validation,optional"`
	OMITags                 common.TagMap           `mapstructure:"tags" cty:"tags" hcl:"tags,optional"`
	OMIForceDeregister      bool                    `mapstructure:"force_deregister" cty:"force_deregister" hcl:"force_deregister,optional"`
	OMIForceDeleteSnapshot  bool                    `mapstructure:"force_delete_snapshot" cty:"force_delete_snapshot" hcl:"force_delete_snapshot,optional"`
	SnapshotTags            common.TagMap           `mapstructure:"snapshot_tags" cty:"snapshot_tags" hcl:"snapshot_tags,optional"`
	SnapshotAccountIDs      []string                `mapstructure:"snapshot_account_ids" cty:"snapshot_account_ids" hcl:"snapshot_account_ids,optional"`
	SnapshotGroups          []string                `mapstructure:"snapshot_groups" cty:"snapshot_groups" hcl:"snapshot_groups,optional"`
	AccessKey               string                  `mapstructure:"access_key" cty:"access_key" hcl:"access_key,optional"`
	CustomEndpointOAPI      string                  `mapstructure:"custom_endpoint_oapi" cty:"custom_endpoint_oapi" hcl:"custom_endpoint_oapi,optional"`
	InsecureSkipTLSVerify   bool                    `mapstructure:"insecure_skip_tls_verify" cty:"insecure_skip_tls_verify" hcl:"insecure_skip_tls_verify,optional"`
	MFACode                 string                  `mapstructure:"mfa_code" cty:"mfa_code" hcl:"mfa_code,optional"`
	ProfileName             string                  `mapstructure:"profile" cty:"profile" hcl:"profile,optional"`
	RawRegion               string                  `mapstructure:"region" cty:"region" hcl:"region,optional"`
	SecretKey               string                  `mapstructure:"secret_key" cty:"secret_key" hcl:"secret_key,optional"`
	SkipValidation          bool                    `mapstructure:"skip_region_validation" cty:"skip_region_validation" hcl:"skip_region_validation,optional"`
	SkipMetadataApiCheck    bool                    `mapstructure:"skip_metadata_api_check" cty:"skip_metadata_api_check" hcl:"skip_metadata_api_check,optional"`
	Token                   string                  `mapstructure:"token" cty:"token" hcl:"token,optional"`
	ChrootMounts            [][]string              `mapstructure:"chroot_mounts" cty:"chroot_mounts" hcl:"chroot_mounts,optional"`
	CommandWrapper          string                  `mapstructure:"command_wrapper" cty:"command_wrapper" hcl:"command_wrapper,optional"`
	CopyFiles               []string                `mapstructure:"copy_files" cty:"copy_files" hcl:"copy_files,optional"`
	DevicePath              string                  `mapstructure:"device_path" cty:"device_path" hcl:"device_path,optional"`
	NVMEDevicePath          string                  `mapstructure:"nvme_device_path" cty:"nvme_device_path" hcl:"nvme_device_path,optional"`
	FromScratch             bool                    `mapstructure:"from_scratch" cty:"from_scratch" hcl:"from_scratch,optional"`
	MountOptions            []string                `mapstructure:"mount_options" cty:"mount_options" hcl:"mount_options,optional"`
	MountPartition          string                  `mapstructure:"mount_partition" cty:"mount_partition" hcl:"mount_partition,optional"`
	MountPath               string                  `mapstructure:"mount_path" cty:"mount_path" hcl:"mount_path,optional"`
	PostMountCommands       []string                `mapstructure:"post_mount_commands" cty:"post_mount_commands" hcl:"post_mount_commands,optional"`
	PreMountCommands        []string                `mapstructure:"pre_mount_commands" cty:"pre_mount_commands" hcl:"pre_mount_commands,optional"`
	RootDeviceName          string                  `mapstructure:"root_device_name" cty:"root_device_name" hcl:"root_device_name,optional"`
	RootVolumeSize          int64                   `mapstructure:"root_volume_size" cty:"root_volume_size" hcl:"root_volume_size,optional"`
	RootVolumeType          string                  `mapstructure:"root_volume_type" cty:"root_volume_type" hcl:"root_volume_type,optional"`
	SourceOMI               string                  `mapstructure:"source_omi" cty:"source_omi" hcl:"source_omi,optional"`
	SourceOMIFilter         common.OmiFilterOptions `mapstructure:"source_omi_filter" cty:"source_omi_filter" hcl:"source_omi_filter,optional"`
	RootVolumeTags          common.TagMap           `mapstructure:"root_volume_tags" cty:"root_volume_tags" hcl:"root_volume_tags,optional"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{} { return new(FlatConfig) }

// HCL2Spec returns the hcldec.Spec of a Config.
// This spec is used by HCL to read the fields of Config.
func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"PackerBuildName":         &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"PackerBuilderType":       &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"PackerDebug":             &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"PackerForce":             &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"PackerOnError":           &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"PackerUserVars":          &hcldec.BlockAttrsSpec{TypeName: "packer_user_variables", ElementType: cty.String, Required: false},
		"PackerSensitiveVars":     &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"OMIMappings":             &hcldec.BlockListSpec{TypeName: "[]common.BlockDevice", Nested: &hcldec.BlockObjectSpec{TypeName: "common.BlockDevice", Nested: hcldec.ObjectSpec((*common.BlockDevice)(nil).HCL2Spec())}},
		"OMIName":                 &hcldec.AttrSpec{Name: "omi_name", Type: cty.String, Required: false},
		"OMIDescription":          &hcldec.AttrSpec{Name: "omi_description", Type: cty.String, Required: false},
		"OMIVirtType":             &hcldec.AttrSpec{Name: "omi_virtualization_type", Type: cty.String, Required: false},
		"OMIAccountIDs":           &hcldec.AttrSpec{Name: "omi_account_ids", Type: cty.List(cty.String), Required: false},
		"OMIGroups":               &hcldec.AttrSpec{Name: "omi_groups", Type: cty.List(cty.String), Required: false},
		"OMIProductCodes":         &hcldec.AttrSpec{Name: "omi_product_codes", Type: cty.List(cty.String), Required: false},
		"OMIRegions":              &hcldec.AttrSpec{Name: "omi_regions", Type: cty.List(cty.String), Required: false},
		"OMISkipRegionValidation": &hcldec.AttrSpec{Name: "skip_region_validation", Type: cty.Bool, Required: false},
		"OMITags":                 &hcldec.BlockAttrsSpec{TypeName: "common.TagMap", ElementType: cty.String, Required: false},
		"OMIForceDeregister":      &hcldec.AttrSpec{Name: "force_deregister", Type: cty.Bool, Required: false},
		"OMIForceDeleteSnapshot":  &hcldec.AttrSpec{Name: "force_delete_snapshot", Type: cty.Bool, Required: false},
		"SnapshotTags":            &hcldec.BlockAttrsSpec{TypeName: "common.TagMap", ElementType: cty.String, Required: false},
		"SnapshotAccountIDs":      &hcldec.AttrSpec{Name: "snapshot_account_ids", Type: cty.List(cty.String), Required: false},
		"SnapshotGroups":          &hcldec.AttrSpec{Name: "snapshot_groups", Type: cty.List(cty.String), Required: false},
		"AccessKey":               &hcldec.AttrSpec{Name: "access_key", Type: cty.String, Required: false},
		"CustomEndpointOAPI":      &hcldec.AttrSpec{Name: "custom_endpoint_oapi", Type: cty.String, Required: false},
		"InsecureSkipTLSVerify":   &hcldec.AttrSpec{Name: "insecure_skip_tls_verify", Type: cty.Bool, Required: false},
		"MFACode":                 &hcldec.AttrSpec{Name: "mfa_code", Type: cty.String, Required: false},
		"ProfileName":             &hcldec.AttrSpec{Name: "profile", Type: cty.String, Required: false},
		"RawRegion":               &hcldec.AttrSpec{Name: "region", Type: cty.String, Required: false},
		"SecretKey":               &hcldec.AttrSpec{Name: "secret_key", Type: cty.String, Required: false},
		"SkipValidation":          &hcldec.AttrSpec{Name: "skip_region_validation", Type: cty.Bool, Required: false},
		"SkipMetadataApiCheck":    &hcldec.AttrSpec{Name: "skip_metadata_api_check", Type: cty.Bool, Required: false},
		"Token":                   &hcldec.AttrSpec{Name: "token", Type: cty.String, Required: false},
		"ChrootMounts":            nil, // slice ([][]string),
		"CommandWrapper":          &hcldec.AttrSpec{Name: "command_wrapper", Type: cty.String, Required: false},
		"CopyFiles":               &hcldec.AttrSpec{Name: "copy_files", Type: cty.List(cty.String), Required: false},
		"DevicePath":              &hcldec.AttrSpec{Name: "device_path", Type: cty.String, Required: false},
		"NVMEDevicePath":          &hcldec.AttrSpec{Name: "nvme_device_path", Type: cty.String, Required: false},
		"FromScratch":             &hcldec.AttrSpec{Name: "from_scratch", Type: cty.Bool, Required: false},
		"MountOptions":            &hcldec.AttrSpec{Name: "mount_options", Type: cty.List(cty.String), Required: false},
		"MountPartition":          &hcldec.AttrSpec{Name: "mount_partition", Type: cty.String, Required: false},
		"MountPath":               &hcldec.AttrSpec{Name: "mount_path", Type: cty.String, Required: false},
		"PostMountCommands":       &hcldec.AttrSpec{Name: "post_mount_commands", Type: cty.List(cty.String), Required: false},
		"PreMountCommands":        &hcldec.AttrSpec{Name: "pre_mount_commands", Type: cty.List(cty.String), Required: false},
		"RootDeviceName":          &hcldec.AttrSpec{Name: "root_device_name", Type: cty.String, Required: false},
		"RootVolumeSize":          &hcldec.AttrSpec{Name: "root_volume_size", Type: cty.Number, Required: false},
		"RootVolumeType":          &hcldec.AttrSpec{Name: "root_volume_type", Type: cty.String, Required: false},
		"SourceOMI":               &hcldec.AttrSpec{Name: "source_omi", Type: cty.String, Required: false},
		"SourceOMIFilter":         &hcldec.BlockObjectSpec{TypeName: "common.OmiFilterOptions", Nested: hcldec.ObjectSpec((*common.OmiFilterOptions)(nil).HCL2Spec())},
		"RootVolumeTags":          &hcldec.BlockAttrsSpec{TypeName: "common.TagMap", ElementType: cty.String, Required: false},
	}
	return s
}
