// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package chefsolo

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName            string                 `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name,optional"`
	PackerBuilderType          string                 `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type,optional"`
	PackerDebug                bool                   `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug,optional"`
	PackerForce                bool                   `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force,optional"`
	PackerOnError              string                 `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error,optional"`
	PackerUserVars             map[string]string      `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables,optional"`
	PackerSensitiveVars        []string               `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables,optional"`
	ChefEnvironment            string                 `mapstructure:"chef_environment" cty:"chef_environment" hcl:"chef_environment,optional"`
	ChefLicense                string                 `mapstructure:"chef_license" cty:"chef_license" hcl:"chef_license,optional"`
	ConfigTemplate             string                 `mapstructure:"config_template" cty:"config_template" hcl:"config_template,optional"`
	CookbookPaths              []string               `mapstructure:"cookbook_paths" cty:"cookbook_paths" hcl:"cookbook_paths,optional"`
	RolesPath                  string                 `mapstructure:"roles_path" cty:"roles_path" hcl:"roles_path,optional"`
	DataBagsPath               string                 `mapstructure:"data_bags_path" cty:"data_bags_path" hcl:"data_bags_path,optional"`
	EncryptedDataBagSecretPath string                 `mapstructure:"encrypted_data_bag_secret_path" cty:"encrypted_data_bag_secret_path" hcl:"encrypted_data_bag_secret_path,optional"`
	EnvironmentsPath           string                 `mapstructure:"environments_path" cty:"environments_path" hcl:"environments_path,optional"`
	ExecuteCommand             string                 `mapstructure:"execute_command" cty:"execute_command" hcl:"execute_command,optional"`
	InstallCommand             string                 `mapstructure:"install_command" cty:"install_command" hcl:"install_command,optional"`
	RemoteCookbookPaths        []string               `mapstructure:"remote_cookbook_paths" cty:"remote_cookbook_paths" hcl:"remote_cookbook_paths,optional"`
	Json                       map[string]interface{} `cty:"json" hcl:"json,optional"`
	PreventSudo                bool                   `mapstructure:"prevent_sudo" cty:"prevent_sudo" hcl:"prevent_sudo,optional"`
	RunList                    []string               `mapstructure:"run_list" cty:"run_list" hcl:"run_list,optional"`
	SkipInstall                bool                   `mapstructure:"skip_install" cty:"skip_install" hcl:"skip_install,optional"`
	StagingDir                 string                 `mapstructure:"staging_directory" cty:"staging_directory" hcl:"staging_directory,optional"`
	GuestOSType                string                 `mapstructure:"guest_os_type" cty:"guest_os_type" hcl:"guest_os_type,optional"`
	Version                    string                 `mapstructure:"version" cty:"version" hcl:"version,optional"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{} { return new(FlatConfig) }

// HCL2Spec returns the hcldec.Spec of a Config.
// This spec is used by HCL to read the fields of Config.
func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"PackerBuildName":            &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"PackerBuilderType":          &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"PackerDebug":                &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"PackerForce":                &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"PackerOnError":              &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"PackerUserVars":             &hcldec.BlockAttrsSpec{TypeName: "packer_user_variables", ElementType: cty.String, Required: false},
		"PackerSensitiveVars":        &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"ChefEnvironment":            &hcldec.AttrSpec{Name: "chef_environment", Type: cty.String, Required: false},
		"ChefLicense":                &hcldec.AttrSpec{Name: "chef_license", Type: cty.String, Required: false},
		"ConfigTemplate":             &hcldec.AttrSpec{Name: "config_template", Type: cty.String, Required: false},
		"CookbookPaths":              &hcldec.AttrSpec{Name: "cookbook_paths", Type: cty.List(cty.String), Required: false},
		"RolesPath":                  &hcldec.AttrSpec{Name: "roles_path", Type: cty.String, Required: false},
		"DataBagsPath":               &hcldec.AttrSpec{Name: "data_bags_path", Type: cty.String, Required: false},
		"EncryptedDataBagSecretPath": &hcldec.AttrSpec{Name: "encrypted_data_bag_secret_path", Type: cty.String, Required: false},
		"EnvironmentsPath":           &hcldec.AttrSpec{Name: "environments_path", Type: cty.String, Required: false},
		"ExecuteCommand":             &hcldec.AttrSpec{Name: "execute_command", Type: cty.String, Required: false},
		"InstallCommand":             &hcldec.AttrSpec{Name: "install_command", Type: cty.String, Required: false},
		"RemoteCookbookPaths":        &hcldec.AttrSpec{Name: "remote_cookbook_paths", Type: cty.List(cty.String), Required: false},
		"Json":                       &hcldec.BlockAttrsSpec{TypeName: "json", ElementType: cty.String, Required: false},
		"PreventSudo":                &hcldec.AttrSpec{Name: "prevent_sudo", Type: cty.Bool, Required: false},
		"RunList":                    &hcldec.AttrSpec{Name: "run_list", Type: cty.List(cty.String), Required: false},
		"SkipInstall":                &hcldec.AttrSpec{Name: "skip_install", Type: cty.Bool, Required: false},
		"StagingDir":                 &hcldec.AttrSpec{Name: "staging_directory", Type: cty.String, Required: false},
		"GuestOSType":                &hcldec.AttrSpec{Name: "guest_os_type", Type: cty.String, Required: false},
		"Version":                    &hcldec.AttrSpec{Name: "version", Type: cty.String, Required: false},
	}
	return s
}
