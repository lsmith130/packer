// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package inspec

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName      string            `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name,optional"`
	PackerBuilderType    string            `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type,optional"`
	PackerDebug          bool              `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug,optional"`
	PackerForce          bool              `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force,optional"`
	PackerOnError        string            `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error,optional"`
	PackerUserVars       map[string]string `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables,optional"`
	PackerSensitiveVars  []string          `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables,optional"`
	Command              string            `cty:"command" hcl:"command,optional"`
	SubCommand           string            `cty:"sub_command" hcl:"sub_command,optional"`
	ExtraArguments       []string          `mapstructure:"extra_arguments" cty:"extra_arguments" hcl:"extra_arguments,optional"`
	InspecEnvVars        []string          `mapstructure:"inspec_env_vars" cty:"inspec_env_vars" hcl:"inspec_env_vars,optional"`
	Profile              string            `mapstructure:"profile" cty:"profile" hcl:"profile,optional"`
	AttributesDirectory  string            `mapstructure:"attributes_directory" cty:"attributes_directory" hcl:"attributes_directory,optional"`
	AttributesFiles      []string          `mapstructure:"attributes" cty:"attributes" hcl:"attributes,optional"`
	Backend              string            `mapstructure:"backend" cty:"backend" hcl:"backend,optional"`
	User                 string            `mapstructure:"user" cty:"user" hcl:"user,optional"`
	Host                 string            `mapstructure:"host" cty:"host" hcl:"host,optional"`
	LocalPort            int               `mapstructure:"local_port" cty:"local_port" hcl:"local_port,optional"`
	SSHHostKeyFile       string            `mapstructure:"ssh_host_key_file" cty:"ssh_host_key_file" hcl:"ssh_host_key_file,optional"`
	SSHAuthorizedKeyFile string            `mapstructure:"ssh_authorized_key_file" cty:"ssh_authorized_key_file" hcl:"ssh_authorized_key_file,optional"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{} { return new(FlatConfig) }

// HCL2Spec returns the hcldec.Spec of a Config.
// This spec is used by HCL to read the fields of Config.
func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"PackerBuildName":      &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"PackerBuilderType":    &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"PackerDebug":          &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"PackerForce":          &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"PackerOnError":        &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"PackerUserVars":       &hcldec.BlockAttrsSpec{TypeName: "packer_user_variables", ElementType: cty.String, Required: false},
		"PackerSensitiveVars":  &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"Command":              &hcldec.AttrSpec{Name: "command", Type: cty.String, Required: false},
		"SubCommand":           &hcldec.AttrSpec{Name: "sub_command", Type: cty.String, Required: false},
		"ExtraArguments":       &hcldec.AttrSpec{Name: "extra_arguments", Type: cty.List(cty.String), Required: false},
		"InspecEnvVars":        &hcldec.AttrSpec{Name: "inspec_env_vars", Type: cty.List(cty.String), Required: false},
		"Profile":              &hcldec.AttrSpec{Name: "profile", Type: cty.String, Required: false},
		"AttributesDirectory":  &hcldec.AttrSpec{Name: "attributes_directory", Type: cty.String, Required: false},
		"AttributesFiles":      &hcldec.AttrSpec{Name: "attributes", Type: cty.List(cty.String), Required: false},
		"Backend":              &hcldec.AttrSpec{Name: "backend", Type: cty.String, Required: false},
		"User":                 &hcldec.AttrSpec{Name: "user", Type: cty.String, Required: false},
		"Host":                 &hcldec.AttrSpec{Name: "host", Type: cty.String, Required: false},
		"LocalPort":            &hcldec.AttrSpec{Name: "local_port", Type: cty.Number, Required: false},
		"SSHHostKeyFile":       &hcldec.AttrSpec{Name: "ssh_host_key_file", Type: cty.String, Required: false},
		"SSHAuthorizedKeyFile": &hcldec.AttrSpec{Name: "ssh_authorized_key_file", Type: cty.String, Required: false},
	}
	return s
}
