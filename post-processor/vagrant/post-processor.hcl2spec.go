// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package vagrant

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName              string                 `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name,optional"`
	PackerBuilderType            string                 `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type,optional"`
	PackerDebug                  bool                   `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug,optional"`
	PackerForce                  bool                   `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force,optional"`
	PackerOnError                string                 `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error,optional"`
	PackerUserVars               map[string]string      `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables,optional"`
	PackerSensitiveVars          []string               `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables,optional"`
	CompressionLevel             int                    `mapstructure:"compression_level" cty:"compression_level" hcl:"compression_level,optional"`
	Include                      []string               `mapstructure:"include" cty:"include" hcl:"include,optional"`
	OutputPath                   string                 `mapstructure:"output" cty:"output" hcl:"output,optional"`
	Override                     map[string]interface{} `cty:"override" hcl:"override,optional"`
	VagrantfileTemplate          string                 `mapstructure:"vagrantfile_template" cty:"vagrantfile_template" hcl:"vagrantfile_template,optional"`
	VagrantfileTemplateGenerated bool                   `mapstructure:"vagrantfile_template_generated" cty:"vagrantfile_template_generated" hcl:"vagrantfile_template_generated,optional"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{} { return new(FlatConfig) }

// HCL2Spec returns the hcldec.Spec of a Config.
// This spec is used by HCL to read the fields of Config.
func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"PackerBuildName":              &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"PackerBuilderType":            &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"PackerDebug":                  &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"PackerForce":                  &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"PackerOnError":                &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"PackerUserVars":               &hcldec.BlockAttrsSpec{TypeName: "packer_user_variables", ElementType: cty.String, Required: false},
		"PackerSensitiveVars":          &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"CompressionLevel":             &hcldec.AttrSpec{Name: "compression_level", Type: cty.Number, Required: false},
		"Include":                      &hcldec.AttrSpec{Name: "include", Type: cty.List(cty.String), Required: false},
		"OutputPath":                   &hcldec.AttrSpec{Name: "output", Type: cty.String, Required: false},
		"Override":                     &hcldec.BlockAttrsSpec{TypeName: "override", ElementType: cty.String, Required: false},
		"VagrantfileTemplate":          &hcldec.AttrSpec{Name: "vagrantfile_template", Type: cty.String, Required: false},
		"VagrantfileTemplateGenerated": &hcldec.AttrSpec{Name: "vagrantfile_template_generated", Type: cty.Bool, Required: false},
	}
	return s
}
