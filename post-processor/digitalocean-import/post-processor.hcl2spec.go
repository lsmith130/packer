// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package digitaloceanimport

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
	"time"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName     string            `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name,optional"`
	PackerBuilderType   string            `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type,optional"`
	PackerDebug         bool              `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug,optional"`
	PackerForce         bool              `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force,optional"`
	PackerOnError       string            `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error,optional"`
	PackerUserVars      map[string]string `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables,optional"`
	PackerSensitiveVars []string          `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables,optional"`
	APIToken            string            `mapstructure:"api_token" cty:"api_token" hcl:"api_token,optional"`
	SpacesKey           string            `mapstructure:"spaces_key" cty:"spaces_key" hcl:"spaces_key,optional"`
	SpacesSecret        string            `mapstructure:"spaces_secret" cty:"spaces_secret" hcl:"spaces_secret,optional"`
	SpacesRegion        string            `mapstructure:"spaces_region" cty:"spaces_region" hcl:"spaces_region,optional"`
	SpaceName           string            `mapstructure:"space_name" cty:"space_name" hcl:"space_name,optional"`
	ObjectName          string            `mapstructure:"space_object_name" cty:"space_object_name" hcl:"space_object_name,optional"`
	SkipClean           bool              `mapstructure:"skip_clean" cty:"skip_clean" hcl:"skip_clean,optional"`
	Tags                []string          `mapstructure:"image_tags" cty:"image_tags" hcl:"image_tags,optional"`
	Name                string            `mapstructure:"image_name" cty:"image_name" hcl:"image_name,optional"`
	Description         string            `mapstructure:"image_description" cty:"image_description" hcl:"image_description,optional"`
	Distribution        string            `mapstructure:"image_distribution" cty:"image_distribution" hcl:"image_distribution,optional"`
	ImageRegions        []string          `mapstructure:"image_regions" cty:"image_regions" hcl:"image_regions,optional"`
	Timeout             time.Duration     `mapstructure:"timeout" cty:"timeout" hcl:"timeout,optional"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{} { return new(FlatConfig) }

// HCL2Spec returns the hcldec.Spec of a Config.
// This spec is used by HCL to read the fields of Config.
func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"PackerBuildName":     &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"PackerBuilderType":   &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"PackerDebug":         &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"PackerForce":         &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"PackerOnError":       &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"PackerUserVars":      &hcldec.BlockAttrsSpec{TypeName: "packer_user_variables", ElementType: cty.String, Required: false},
		"PackerSensitiveVars": &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"APIToken":            &hcldec.AttrSpec{Name: "api_token", Type: cty.String, Required: false},
		"SpacesKey":           &hcldec.AttrSpec{Name: "spaces_key", Type: cty.String, Required: false},
		"SpacesSecret":        &hcldec.AttrSpec{Name: "spaces_secret", Type: cty.String, Required: false},
		"SpacesRegion":        &hcldec.AttrSpec{Name: "spaces_region", Type: cty.String, Required: false},
		"SpaceName":           &hcldec.AttrSpec{Name: "space_name", Type: cty.String, Required: false},
		"ObjectName":          &hcldec.AttrSpec{Name: "space_object_name", Type: cty.String, Required: false},
		"SkipClean":           &hcldec.AttrSpec{Name: "skip_clean", Type: cty.Bool, Required: false},
		"Tags":                &hcldec.AttrSpec{Name: "image_tags", Type: cty.List(cty.String), Required: false},
		"Name":                &hcldec.AttrSpec{Name: "image_name", Type: cty.String, Required: false},
		"Description":         &hcldec.AttrSpec{Name: "image_description", Type: cty.String, Required: false},
		"Distribution":        &hcldec.AttrSpec{Name: "image_distribution", Type: cty.String, Required: false},
		"ImageRegions":        &hcldec.AttrSpec{Name: "image_regions", Type: cty.List(cty.String), Required: false},
		"Timeout":             &hcldec.AttrSpec{Name: "timeout", Type: cty.String, Required: false},
	}
	return s
}
