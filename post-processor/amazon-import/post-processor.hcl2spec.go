// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package amazonimport

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/hashicorp/packer/builder/amazon/common"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName       string                       `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name,optional"`
	PackerBuilderType     string                       `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type,optional"`
	PackerDebug           bool                         `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug,optional"`
	PackerForce           bool                         `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force,optional"`
	PackerOnError         string                       `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error,optional"`
	PackerUserVars        map[string]string            `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables,optional"`
	PackerSensitiveVars   []string                     `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables,optional"`
	AccessKey             string                       `mapstructure:"access_key" required:"true" cty:"access_key" hcl:"access_key,optional"`
	CustomEndpointEc2     string                       `mapstructure:"custom_endpoint_ec2" required:"false" cty:"custom_endpoint_ec2" hcl:"custom_endpoint_ec2,optional"`
	DecodeAuthZMessages   bool                         `mapstructure:"decode_authorization_messages" required:"false" cty:"decode_authorization_messages" hcl:"decode_authorization_messages,optional"`
	InsecureSkipTLSVerify bool                         `mapstructure:"insecure_skip_tls_verify" required:"false" cty:"insecure_skip_tls_verify" hcl:"insecure_skip_tls_verify,optional"`
	MFACode               string                       `mapstructure:"mfa_code" required:"false" cty:"mfa_code" hcl:"mfa_code,optional"`
	ProfileName           string                       `mapstructure:"profile" required:"false" cty:"profile" hcl:"profile,optional"`
	RawRegion             string                       `mapstructure:"region" required:"true" cty:"region" hcl:"region,optional"`
	SecretKey             string                       `mapstructure:"secret_key" required:"true" cty:"secret_key" hcl:"secret_key,optional"`
	SkipValidation        bool                         `mapstructure:"skip_region_validation" required:"false" cty:"skip_region_validation" hcl:"skip_region_validation,optional"`
	SkipMetadataApiCheck  bool                         `mapstructure:"skip_metadata_api_check" cty:"skip_metadata_api_check" hcl:"skip_metadata_api_check,optional"`
	Token                 string                       `mapstructure:"token" required:"false" cty:"token" hcl:"token,optional"`
	VaultAWSEngine        common.VaultAWSEngineOptions `mapstructure:"vault_aws_engine" required:"false" cty:"vault_aws_engine" hcl:"vault_aws_engine,optional"`
	S3Bucket              string                       `mapstructure:"s3_bucket_name" cty:"s3_bucket_name" hcl:"s3_bucket_name,optional"`
	S3Key                 string                       `mapstructure:"s3_key_name" cty:"s3_key_name" hcl:"s3_key_name,optional"`
	S3Encryption          string                       `mapstructure:"s3_encryption" cty:"s3_encryption" hcl:"s3_encryption,optional"`
	S3EncryptionKey       string                       `mapstructure:"s3_encryption_key" cty:"s3_encryption_key" hcl:"s3_encryption_key,optional"`
	SkipClean             bool                         `mapstructure:"skip_clean" cty:"skip_clean" hcl:"skip_clean,optional"`
	Tags                  map[string]string            `mapstructure:"tags" cty:"tags" hcl:"tags,optional"`
	Name                  string                       `mapstructure:"ami_name" cty:"ami_name" hcl:"ami_name,optional"`
	Description           string                       `mapstructure:"ami_description" cty:"ami_description" hcl:"ami_description,optional"`
	Users                 []string                     `mapstructure:"ami_users" cty:"ami_users" hcl:"ami_users,optional"`
	Groups                []string                     `mapstructure:"ami_groups" cty:"ami_groups" hcl:"ami_groups,optional"`
	Encrypt               bool                         `mapstructure:"ami_encrypt" cty:"ami_encrypt" hcl:"ami_encrypt,optional"`
	KMSKey                string                       `mapstructure:"ami_kms_key" cty:"ami_kms_key" hcl:"ami_kms_key,optional"`
	LicenseType           string                       `mapstructure:"license_type" cty:"license_type" hcl:"license_type,optional"`
	RoleName              string                       `mapstructure:"role_name" cty:"role_name" hcl:"role_name,optional"`
	Format                string                       `mapstructure:"format" cty:"format" hcl:"format,optional"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{} { return new(FlatConfig) }

// HCL2Spec returns the hcldec.Spec of a Config.
// This spec is used by HCL to read the fields of Config.
func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"PackerBuildName":       &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"PackerBuilderType":     &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"PackerDebug":           &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"PackerForce":           &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"PackerOnError":         &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"PackerUserVars":        &hcldec.BlockAttrsSpec{TypeName: "packer_user_variables", ElementType: cty.String, Required: false},
		"PackerSensitiveVars":   &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"AccessKey":             &hcldec.AttrSpec{Name: "access_key", Type: cty.String, Required: false},
		"CustomEndpointEc2":     &hcldec.AttrSpec{Name: "custom_endpoint_ec2", Type: cty.String, Required: false},
		"DecodeAuthZMessages":   &hcldec.AttrSpec{Name: "decode_authorization_messages", Type: cty.Bool, Required: false},
		"InsecureSkipTLSVerify": &hcldec.AttrSpec{Name: "insecure_skip_tls_verify", Type: cty.Bool, Required: false},
		"MFACode":               &hcldec.AttrSpec{Name: "mfa_code", Type: cty.String, Required: false},
		"ProfileName":           &hcldec.AttrSpec{Name: "profile", Type: cty.String, Required: false},
		"RawRegion":             &hcldec.AttrSpec{Name: "region", Type: cty.String, Required: false},
		"SecretKey":             &hcldec.AttrSpec{Name: "secret_key", Type: cty.String, Required: false},
		"SkipValidation":        &hcldec.AttrSpec{Name: "skip_region_validation", Type: cty.Bool, Required: false},
		"SkipMetadataApiCheck":  &hcldec.AttrSpec{Name: "skip_metadata_api_check", Type: cty.Bool, Required: false},
		"Token":                 &hcldec.AttrSpec{Name: "token", Type: cty.String, Required: false},
		"VaultAWSEngine":        &hcldec.BlockObjectSpec{TypeName: "common.VaultAWSEngineOptions", Nested: hcldec.ObjectSpec((*common.VaultAWSEngineOptions)(nil).HCL2Spec())},
		"S3Bucket":              &hcldec.AttrSpec{Name: "s3_bucket_name", Type: cty.String, Required: false},
		"S3Key":                 &hcldec.AttrSpec{Name: "s3_key_name", Type: cty.String, Required: false},
		"S3Encryption":          &hcldec.AttrSpec{Name: "s3_encryption", Type: cty.String, Required: false},
		"S3EncryptionKey":       &hcldec.AttrSpec{Name: "s3_encryption_key", Type: cty.String, Required: false},
		"SkipClean":             &hcldec.AttrSpec{Name: "skip_clean", Type: cty.Bool, Required: false},
		"Tags":                  &hcldec.BlockAttrsSpec{TypeName: "tags", ElementType: cty.String, Required: false},
		"Name":                  &hcldec.AttrSpec{Name: "ami_name", Type: cty.String, Required: false},
		"Description":           &hcldec.AttrSpec{Name: "ami_description", Type: cty.String, Required: false},
		"Users":                 &hcldec.AttrSpec{Name: "ami_users", Type: cty.List(cty.String), Required: false},
		"Groups":                &hcldec.AttrSpec{Name: "ami_groups", Type: cty.List(cty.String), Required: false},
		"Encrypt":               &hcldec.AttrSpec{Name: "ami_encrypt", Type: cty.Bool, Required: false},
		"KMSKey":                &hcldec.AttrSpec{Name: "ami_kms_key", Type: cty.String, Required: false},
		"LicenseType":           &hcldec.AttrSpec{Name: "license_type", Type: cty.String, Required: false},
		"RoleName":              &hcldec.AttrSpec{Name: "role_name", Type: cty.String, Required: false},
		"Format":                &hcldec.AttrSpec{Name: "format", Type: cty.String, Required: false},
	}
	return s
}
